defaults: &defaults
  working_directory: ~/breko-hub
  docker:
    - image: circleci/node:8.9
      environment:
        PORT: 9001
        TZ: "/usr/share/zoneinfo/Europe/London"

version: 2
jobs:
  checkout:
    <<: *defaults
    steps:
      - checkout
      - run: sudo npm install -g npm@latest
      - save_cache:
          key: checkout-cache-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/breko-hub
  install:
    <<: *defaults
    steps:
      - restore_cache:
          key: checkout-cache-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ~/breko-hub/node_modules
  build:
    <<: *defaults
    steps:
      - restore_cache:
          key: checkout-cache-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run: npm run build
  lint:
    <<: *defaults
    steps:
      - restore_cache:
          key: checkout-cache-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run: npm run lint
      - run: npm run lint:styles
  test_unit:
    <<: *defaults
    steps:
      - restore_cache:
          key: checkout-cache-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run: npm run test:unit -- --reporter spec

  test_integration:
    <<: *defaults
    steps:
      - restore_cache:
          key: checkout-cache-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run: npm run test:int -- --reporter spec

workflows:
  version: 2
  build_test:
    jobs:
      - checkout
      - install:
          requires:
            - checkout
      - build:
          requires:
            - install
      - lint:
          requires:
            - install
      - test_unit:
          requires:
            - install
      - test_integration:
          requires:
            - install
